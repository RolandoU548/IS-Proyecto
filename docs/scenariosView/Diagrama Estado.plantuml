@startuml n7
/'
Lea el enunciado del proyecto y cree un diagrama de estado que nos ayude a entender el proceso del negocio que se quiere automatizar. Use como base el diagrama de clases del modelo de dominio hecho en el reto 07.

Cree un repositorio para el proyecto en GitHub al que tengan acceso todos los integrantes del grupo.

Cree también la siguiente estructura de directorios:

docs/ -> directorio para guardar la documentación
docs/scenariosView - > diagramas de requisitos
docs/logicalView -> diagramas de la vista lógica
docs/developmentView -> diagramas de la vista de desarrollo
docs/processView -> diagramas de la vista de proceso
docs/physicalView -> diagramas de la vista física
src -> directorio para guardar el código de la aplicación
src/main -> directorio para el código fuente
src/test -> directorio para las pruebas unitarias
README.md -> archivo readme del proyecto
Coloque en el directorio “docs/scenariosView” los archivos “.plantuml” del diagrama de clases y de estado del modelo de dominio del proyecto.

También edite el archivo “README.md”, coloque como título el nombre del proyecto, liste los integrantes del equipo y coloque una sección llamada “Modelo del Dominio”, dentro de esa sección inserte las imágenes del diagrama de clases y de estado correspondiente.

Suba todo a GitHUb.

Al terminar, coloque el URL del repositorio del proyecto.
'/

state choice1 <<choice>>
state join_state <<join>>
state join_state2 <<join>>

[*] --> choice1
choice1 --> RegistroUsuario : No esta registrado
choice1 --> join_state : Esta registrado
join_state --> IniciarSesion 
join_state2 --> Moderacion

state RegistroUsuario {
    [*] --> LlenandoRegistro
    LlenandoRegistro --> VerificandoDatos : Enviar datos
}

state IniciarSesion {
    [*] --> LlenandoDatos
    LlenandoDatos --> VerificandoLogin : Enviar datos
    state choice2 <<choice>>
    VerificandoLogin --> choice2
    choice2 --> Publicaciones : Datos correctos
    choice2 --> LlenandoDatos : Datos incorrectos
}

state PlataformaDigital_App {
state join_state3 <<join>>

state PerfilUsuario {
    [*] --> ViendoPerfil
    ViendoPerfil --> EditandoPerfil : Editar
    EditandoPerfil --> ViendoPerfil : Guardar cambios
}

state Publicaciones {
    [*] --> ViendoPublicaciones
    ViendoPublicaciones --> CreandoPublicacion
    CreandoPublicacion --> join_state2 
    Publicando --> EditandoPublicacion : Editar
    EditandoPublicacion --> join_state2
}



state Calendario {
    [*] --> ViendoCalendario
    ViendoCalendario --> Eventos : Seleccionar evento
    state Eventos {
        [*] --> ViendoEvento
        ViendoEvento --> CreandoEvento
        CreandoEvento --> join_state2
        PublicandoEvento --> EditandoEvento : Editar
        EditandoEvento --> join_state2
    }
}

state Notificaciones {
    [*] --> ViendoNotificaciones
    ViendoNotificaciones --> LeyendoNotificacion : Seleccionar notificación
}

state Comentarios {
    [*] --> ViendoPublicacion
    ViendoPublicacion --> Comentando : Añadir comentario
    Comentando --> ViendoPublicacion : Guardar comentario
}

state Moderacion {
    [*] --> RevisandoPublicacion
    RevisandoPublicacion --> AprobandoPublicacion : Aprobar
    RevisandoPublicacion --> RechazandoPublicacion : Rechazar
    AprobandoPublicacion --> Publicando
    AprobandoPublicacion --> PublicandoEvento
}
}
RegistroUsuario --> join_state : Registro completado
Eventos --> Notificaciones : Notificar publicación
Comentarios --> Moderacion : Reportar comentario
Moderacion --> Notificaciones : Notificar moderación

Publicaciones --> join_state3
join_state3 --> Comentarios
join_state3 --> PerfilUsuario
join_state3 --> Calendario

App --> [*] : Cerrar sesion

@enduml